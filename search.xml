<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>无法ac的循环</title>
      <link href="/2023/08/18/%E6%97%A0%E6%B3%95ac%E7%9A%84%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/08/18/%E6%97%A0%E6%B3%95ac%E7%9A%84%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我做的for循环</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (sum &lt;= k) &#123;</span><br><span class="line">        sum += <span class="number">1.0</span> / n;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3.5做的while循环</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (sum &lt;= k) &#123;</span><br><span class="line">        sum += <span class="number">1.0</span> / n;</span><br><span class="line">        n++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//3.5做的for循环</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">1</span>; sum &lt;= k; n++) &#123;</span><br><span class="line">        sum += <span class="number">1.0</span> / n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; n &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上都无法编译或者wrong answer</p><p>以下答案由讯飞星火改写标答中cstdio的写法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> k, n;</span><br><span class="line">    <span class="type">double</span> sn = <span class="number">0.0</span>;</span><br><span class="line">    cin &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">1</span>; ; n++) &#123;</span><br><span class="line">        sn += <span class="number">1.0</span> / n;</span><br><span class="line">        <span class="keyword">if</span> (sn &gt; k * <span class="number">1.0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; n;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>n&lt;*</code>的取消和<code>break</code>的添加显示了我的无知</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Junit Test</title>
      <link href="/2023/08/10/JunitTest/"/>
      <url>/2023/08/10/JunitTest/</url>
      
        <content type="html"><![CDATA[<h1 id="1-junit介绍"><a href="#1-junit介绍" class="headerlink" title="1 junit介绍"></a>1 junit介绍</h1><p>JUnit 是一个用于编写和运行单元测试的 Java 测试框架。它是开发人员在开发过程中进行单元测试的重要工具之一。JUnit 提供了一组注解和断言方法，使得编写和运行测试变得简单和高效。</p><p>使用 JUnit，你可以创建测试用例来验证你的代码是否按照预期工作。一个测试用例通常是一个方法，它对你的代码的特定部分进行测试，并检查其行为是否符合预期。你可以编写多个测试用例来覆盖不同的代码路径和边界情况。</p><p>JUnit 提供了一些常用的注解，如 @Test、@Before、@After 等，用于标记测试方法和执行测试前后需要进行的操作。通过使用这些注解，你可以轻松地组织和管理你的测试代码。</p><p>在编写测试用例时，你可以使用 JUnit 提供的断言方法来验证代码的输出和行为。一些常用的断言方法包括 assertEquals()、assertTrue()、assertFalse()、assertNull()、assertNotNull() 等。这些方法可以帮助你比较值、检查条件并验证预期结果。</p><p>运行 JUnit 测试可以通过使用 IDE（集成开发环境）中的测试运行器或者构建工具（如 Maven 或 Gradle）来实现。JUnit 提供了丰富的测试运行器和报告功能，可以帮助你执行测试并查看测试结果。</p><p>通过编写和运行 JUnit 测试，你可以快速发现和修复代码中的问题，确保代码的质量和可靠性。它促进了敏捷开发和测试驱动开发（TDD）的实践，帮助开发人员构建可维护和可测试的代码。</p><p>请注意，JUnit 是一个开源框架，你可以在你的项目中添加 JUnit 依赖来使用它。你可以访问 JUnit 官方网站（<a href="https://junit.org/%EF%BC%89%E8%8E%B7%E5%8F%96%E6%9B%B4%E5%A4%9A%E5%85%B3%E4%BA%8E">https://junit.org/）获取更多关于</a> JUnit 的信息和文E5%8F%96%E6%9B%B4%E5%A4%9A%E5%85%B3%E4%BA%8E JUnit 的信息和文档。</p><h1 id="2-内置函数"><a href="#2-内置函数" class="headerlink" title="2 内置函数"></a>2 内置函数</h1><p>JUnit 提供了一系列的方法和断言来辅助编写和执行测试。这些方法可以帮助你验证代码的行为、比较值、处理异常等。以下是一些 JUnit 提供的常用方法：</p><ol><li><p><code>assertEquals(expected, actual)</code>：比较两个值是否相等。如果预期值 <code>expected</code> 和实际值 <code>actual</code> 相等，则测试通过。可以用于比较基本类型、对象和数组。</p></li><li><p><code>assertTrue(condition)</code>：验证条件是否为真。如果条件 <code>condition</code> 为真，则测试通过。</p></li><li><p><code>assertFalse(condition)</code>：验证条件是否为假。如果条件 <code>condition</code> 为假，则测试通过。</p></li><li><p><code>assertNull(object)</code>：验证对象是否为 null。如果对象 <code>object</code> 为 null，则测试通过。</p></li><li><p><code>assertNotNull(object)</code>：验证对象是否不为 null。如果对象 <code>object</code> 不为 null，则测试通过。</p></li><li><p><code>assertSame(expected, actual)</code>：比较两个对象是否引用同一个对象。如果预期对象 <code>expected</code> 和实际对象 <code>actual</code> 引用同一个对象，则测试通过。</p></li><li><p><code>assertNotSame(expected, actual)</code>：比较两个对象是否不引用同一个对象。如果预期对象 <code>expected</code> 和实际对象 <code>actual</code> 不引用同一个对象，则测试通过。</p></li><li><p><code>assertArrayEquals(expectedArray, actualArray)</code>：比较两个数组是否相等。如果预期数组 <code>expectedArray</code> 和实际数组 <code>actualArray</code> 在内容上完全相同，则测试通过。</p></li><li><p><code>fail()</code>：标记测试失败。可以在测试方法中手动调用该方法来表示测试失败，通常用于测试未达到预期结果的情况。</p></li></ol><p>除了上述方法，JUnit 还提供了其他一些方法来处理异常、超时等情况。例如：</p><ul><li><p><code>@Test(expected = Exception.class)</code>：在注解中指定预期抛出的异常类型，如果测试方法中抛出了指定的异常，则测试通过。</p></li><li><p><code>@Test(timeout = 1000)</code>：在注解中指定超时时间，如果测试方法执行时间超过指定的时间，则测试失败。</p></li></ul><p>这些方法和注解的组合使用可以帮助你编写全面的测试用例，覆盖不同的代码路径和边界情况，确保代码的正确性和健壮性。</p><h1 id="3-应用实例"><a href="#3-应用实例" class="headerlink" title="3 应用实例"></a>3 应用实例</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">testSort</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 创建一个字符串数组 input，包含了待排序的字符串</span></span><br><span class="line">    String[] input = &#123;<span class="string">&quot;i&quot;</span>, <span class="string">&quot;have&quot;</span>, <span class="string">&quot;an&quot;</span>, <span class="string">&quot;egg&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建一个字符串数组 expected，包含了排序后的预期结果</span></span><br><span class="line">    String[] expected = &#123;<span class="string">&quot;an&quot;</span>, <span class="string">&quot;egg&quot;</span>, <span class="string">&quot;have&quot;</span>, <span class="string">&quot;i&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用 Sort 类的 sort 方法对 input 进行排序</span></span><br><span class="line">    Sort.sort(input);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用 JUnit 提供的 assertArrayEquals 方法，比较排序后的 input 数组与预期的 expected 数组是否相等</span></span><br><span class="line">    org.junit.Assert.assertArrayEquals(expected, input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果为：</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Exception in thread <span class="string">&quot;main&quot;</span> arrays first <span class="keyword">differed </span><span class="built_in">at</span> element [<span class="number">0</span>]<span class="comment">; expected:&lt;[an]&gt; but was:&lt;[i]&gt;</span></span><br><span class="line">    <span class="built_in">at</span> <span class="keyword">org.junit.internal.ComparisonCriteria.arrayEquals(ComparisonCriteria.java:55)</span></span><br><span class="line"><span class="keyword"></span>    <span class="built_in">at</span> <span class="keyword">org.junit.Assert.internalArrayEquals(Assert.java:532)</span></span><br><span class="line"><span class="keyword"></span>    ...</span><br></pre></td></tr></table></figure><p>如果不使用该方法，步骤则会繁琐很多：</p><figure class="highlight plaintext"><figcaption><span>class TestSort &#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/** Tests the sort method of the Sort class. */</span><br><span class="line">public static void testSort() &#123;</span><br><span class="line">    String[] input = &#123;&quot;i&quot;, &quot;have&quot;, &quot;an&quot;, &quot;egg&quot;&#125;;</span><br><span class="line">    String[] expected = &#123;&quot;an&quot;, &quot;egg&quot;, &quot;have&quot;, &quot;i&quot;&#125;;</span><br><span class="line">    Sort.sort(input);</span><br><span class="line">    for (int i = 0; i &lt; input.length; i += 1) &#123;</span><br><span class="line">        if (!input[i].equals(expected[i])) &#123;</span><br><span class="line">            System.out.println(&quot;Mismatch in position &quot; + i + &quot;, expected: &quot; + expected + &quot;, but got: &quot; + input[i] + &quot;.&quot;);</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="4-附加问题：如何比较两个字符串大小"><a href="#4-附加问题：如何比较两个字符串大小" class="headerlink" title="4 附加问题：如何比较两个字符串大小"></a>4 附加问题：如何比较两个字符串大小</h1><p>例题：求字符串数组的最小值<br>错误示范：</p><figure class="highlight plaintext"><figcaption><span>Returns the smallest string in x. */</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public static String findSmallest(String[] x) &#123;</span><br><span class="line">    String smallest = x[0];</span><br><span class="line">    for (int i = 0; i &lt; x.length; i += 1) &#123;</span><br><span class="line">        if (x[i] &lt; smallest) &#123;</span><br><span class="line">            smallest = x[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return smallest;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这将产生编译错误“&lt;不能应用于’java.lang.String’”。问题是Java不允许使用&lt;运算符在字符串之间进行比较。<br>正确方法：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public static String findSmallest(String[] x) &#123;</span><br><span class="line">    String smallest <span class="operator">=</span> x[<span class="number">0</span>]<span class="comment">;</span></span><br><span class="line">    for (int i <span class="operator">=</span> <span class="number">0</span><span class="comment">; i &lt; x.length; i += 1) &#123;</span></span><br><span class="line">        int cmp <span class="operator">=</span> x[i].compareTo(smallest)<span class="comment">;</span></span><br><span class="line">        if (cmp &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            smallest <span class="operator">=</span> x[i]<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return smallest<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p> 以下内容源于<a href="https://stackoverflow.com/questions/5153496/how-can-i-compare-two-strings-in-java-and-define-which-of-them-is-smaller-than-t">https://stackoverflow.com/questions/5153496/how-can-i-compare-two-strings-in-java-and-define-which-of-them-is-smaller-than-t</a></p></blockquote><p>您可以使用<code> str1.compareTo(str2)</code>;<br>If str1 is lexicographically less than str2, a negative number will be returned,<br>0 if equal<br>or a positive number if str1 is greater.</p><p>E.g.,</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;a&quot;</span>.<span class="keyword">compareTo</span>(<span class="string">&quot;b&quot;</span>); <span class="comment">// returns a negative number, here -1</span></span><br><span class="line"><span class="string">&quot;a&quot;</span>.<span class="keyword">compareTo</span>(<span class="string">&quot;a&quot;</span>); <span class="comment">// returns  0</span></span><br><span class="line"><span class="string">&quot;b&quot;</span>.<span class="keyword">compareTo</span>(<span class="string">&quot;a&quot;</span>); <span class="comment">// returns a positive number, here 1</span></span><br><span class="line"><span class="string">&quot;b&quot;</span>.<span class="keyword">compareTo</span>(<span class="keyword">null</span>); <span class="comment">// throws java.lang.NullPointerException</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>增强型for循环</title>
      <link href="/2023/08/09/%E5%A2%9E%E5%BC%BA%E5%9E%8Bfor%E5%BE%AA%E7%8E%AF/"/>
      <url>/2023/08/09/%E5%A2%9E%E5%BC%BA%E5%9E%8Bfor%E5%BE%AA%E7%8E%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="The-Enhanced-For-Loop"><a href="#The-Enhanced-For-Loop" class="headerlink" title="The Enhanced For Loop"></a>The Enhanced For Loop</h1><h2 id="1-introduction-from-CS61B-HW0"><a href="#1-introduction-from-CS61B-HW0" class="headerlink" title="1 introduction from CS61B HW0"></a>1 introduction from CS61B HW0</h2><p>Java also supports iteration through an array using an “enhanced for loop”. The basic idea is that there are many circumstances where we don’t actually care about the index at all. In this case, we avoid creating an index variable using a special syntax involving a colon.</p><p>For example, in the code below, we do the exact thing as in BreakDemo above. However, in this case, we do not create an index i. Instead, the String s takes on the identity of each String in a exactly once, starting from a[0], all the way up to a[a.length - 1]. You can try out this code at this link.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EnhancedForBreakDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        String[] a = &#123;<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;dog&quot;</span>, <span class="string">&quot;laser horse&quot;</span>, <span class="string">&quot;ketchup&quot;</span>, <span class="string">&quot;horse&quot;</span>, <span class="string">&quot;horbse&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String s : a) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">3</span>; j += <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(s);</span><br><span class="line">                <span class="keyword">if</span> (s.contains(<span class="string">&quot;horse&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;                </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-example-from-NBody-project"><a href="#2-example-from-NBody-project" class="headerlink" title="2 example from NBody project"></a>2 example from NBody project</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">double</span> <span class="title function_">calcNetForceExertedByX</span><span class="params">(Body[] allBodys)</span>&#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">totalForce</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (Body body : allBodys) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">this</span>.equals(body)) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">totalForce += calcForceExertedByX(body);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> totalForce;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码解释：<br>这段代码是一个Java方法，用于计算一个名为”Body”的类实例在X轴上受到的总净力。这个方法接受一个”Body”类对象数组作为参数，表示所有与当前对象发生相互作用的其他物体。<br>让我来逐步解释这段代码的功能：<br>public double calcNetForceExertedByX(Body[] allBodys)：这是一个公共方法，返回一个double类型的值，表示在X轴上作用在当前物体上的净力。方法接受一个名为allBodys的Body数组作为参数，表示与当前物体相互作用的其他物体。<br>double totalForce &#x3D; 0;：声明并初始化一个名为totalForce的double类型变量，用于存储在X轴上作用在当前物体上的总净力。<br>for (Body body : allBodys)：开始一个循环，遍历传入的allBodys数组中的每个Body对象，这里使用了增强的for循环语法。<br>if (this.equals(body)) { continue; }：在每次循环迭代中，首先检查当前遍历的物体对象是否与当前方法所属的物体对象相同（即是否是同一个物体）。如果是同一个物体，就使用continue语句跳过当前迭代，不进行任何计算，因为物体不会对自身施加净力。<br>totalForce +&#x3D; calcForceExertedByX(body);：对于与当前物体不同的每个其他物体，调用另一个名为calcForceExertedByX的方法，计算当前物体受到的与该物体之间的X轴方向的力，然后将这个力累加到totalForce变量中。<br>循环结束后，返回totalForce变量，即当前物体在X轴上受到的总净力。<br>总而言之，这段代码的作用是计算一个物体在X轴方向上受到的总净力，通过遍历与该物体相互作用的其他物体，并累加每对物体之间的X轴方向上的力。在这个过程中，确保不计算物体对自身的力。</p><blockquote><p>上述解释由chatGPT3.5生成</p></blockquote><h2 id="3-来自博客园的介绍"><a href="#3-来自博客园的介绍" class="headerlink" title="3 来自博客园的介绍"></a>3 来自博客园的介绍</h2><p>For-Each循环<br>　　For-Each循环也叫增强型的for循环，或者叫foreach循环。</p><p>　　For-Each循环是JDK5.0的新特性（其他新特性比如泛型、自动装箱等）。</p><p>　　For-Each循环的加入简化了集合的遍历。</p><p> 其语法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">　　<span class="keyword">for</span>(type element: array)</span><br><span class="line"></span><br><span class="line">　　&#123;</span><br><span class="line">      　　System.out.println(element);</span><br><span class="line">　　&#125;</span><br></pre></td></tr></table></figure><p>对比如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;----------旧方式遍历------------&quot;</span>);</span><br><span class="line">        <span class="comment">//旧式方式        </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;arr.length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">&quot;---------新方式遍历-------------&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//新式写法,增强的for循环</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> element:arr)</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(element);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="4-注意事项"><a href="#4-注意事项" class="headerlink" title="4 注意事项"></a>4 注意事项</h2><blockquote><p>来自软件技术基础课中《java面向对象程序设计》</p></blockquote><p>与标准的for循环相比，这种方式更加简洁。但是，如果修改数组元素，增强的for循环就不再适用。用增强的for循环修改数组元素会引起编译错误，同时也会使程序运行可靠性降低、安全性差。因此，只有在以下情况才可以使用增强的for循环：<br>1.需要访问整个数组（不是数组的一部分）。<br>2.需要读取数组中的元素，而不是修改。<br>3.不需要使用数组下标完成其他处理。</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阮红强 鲨鱼</title>
      <link href="/2023/08/05/%E9%98%AE%E7%BA%A2%E5%BC%BA%E9%B2%A8%E9%B1%BC/"/>
      <url>/2023/08/05/%E9%98%AE%E7%BA%A2%E5%BC%BA%E9%B2%A8%E9%B1%BC/</url>
      
        <content type="html"><![CDATA[<p>一款非常经典的设计，之前尝试过两次都失败了。这次苦茶重绘的cp对我的帮助很大。<br>使用大约50厘米80g牛皮纸折叠而成。<br><img src="/img/%25(3Q65G5V31QLGTHKW8LFVC_tmb.jpg"><br><img src="/img/JSNRO%5BNL5FHQ5O_YK%7DU_RXC_tmb.jpg"><br><img src="/img/3(6HBQU@8BKXXDG6)9J~V%251.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> origami </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>运动随笔</title>
      <link href="/2023/08/04/%E8%BF%90%E5%8A%A8%E9%9A%8F%E7%AC%94/"/>
      <url>/2023/08/04/%E8%BF%90%E5%8A%A8%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在走路的路上完成这篇随笔的。</p></blockquote><p>关于运动这个问题，我也确实想了很多。在这么热的天气里，呆在家里吹风扇，静静的坐着，他不凉快吗？人也心静啊。嗯，但是正如你们想的一样，人们在家里久坐之后，也确实应该出来活动。</p><p>活动可以防止一些不标的疾病，我在家里，隔几天也会出来走动走动，和我在学校的习惯差不多。那么你们又问为什么我要走这么远呢？活动量这么大呢我，在这么热的天气里，我怕在没有风的地方站着，都会感到热我，既然出来活动了，就要出出汗，生命在于运动哦，出来经过一个中中上强度的运动哦，能够使我的筋骨活动起来，消除在家里久坐工作的疲惫。</p><p>运动能够使人产生非常大量的肾上腺素，这种肾上腺素能够让人们工作和生活都充满了激情，而不会在炎热的天气里感到疲惫，感到无聊，以及一些焦虑，在熟悉的地方反复工作，难免会感到厌倦。看到熟悉的事物，也可能会让你放松你的激情和注意力，在操场上跑步，你跑十圈就已经失去了继续的动力，但在陌生的地方跑步，在大街上沿着道路跑，见证不一样的风景，你能跑更远。马拉松运动员在练习跑步的时候，除了在操场上进行技术，还有一项必备的工作，就是压马路，压马路能够适应不同的路况，同时这边不同的风景会减轻跑步的压力，从而达到更好的训练效果。然而，在这么热的天气里，大家都会对大剂量的运动感到恐惧，对那大量的汗水感到厌恶，这就不得不提起舒适圈了，人们总是习惯于活在自己的舒适圈里，而耐于去逃脱它，无论是跑步还是日常的学习和工作，在宿舍圈内呢，大家不会感到这么的困难，也会保持着一定的工作节奏。然而呢，这些对人自身的提高寥寥无几，正如考60分平平无奇的孩子学习一直保持原来的状态，学习他的成绩永远不会提升，一个跑者每天跑着同样的里程，保持着同样的速度，他的成绩也永远不会增加。</p><p>跑步是一项多么迷人的运动，在劳累中，人们沉迷于它的强度，在挑战中，它反馈于人类，让他感受到他对自己的激励。在运动这项过程中，通过接触新的事物，能够极大的让人们减少对他的恐惧和负面情绪，让人更好的投入到这项运动之中，无论是走路还是跑步，它都以大的运动量吸引着人们，而同时以巨大的挑战和较大的耐力吓退了人们，人们在这些比较少量的运动中，或许感到了些许的满足，但是这并不会让他们有所提升，而是会徒增一些汗水和一些时间。</p><p>操场上的老大爷，临山公园上的退休人员，他们没有任何的包袱，完全的，靠某项爱好打发。剩下的时间有的去爬山，有的去跑步，而不愿运动的会养的鸟、看看画。这些活动，也纯粹消磨着他们的时间。年轻人的时间，相对来说是更加珍贵的，无论是在学校还是在家里，他们不仅在忙于自己的学习或工作等事务中投入很多精力，放到自己的兴趣中或者爱好，那么，运动对于我们这些人来说，当然是必不可少的，就以前面提到的那些大量的好处来说，那么，微量的运动在紧急的时间中，可能会有一定的效果，但是在有一定时间控制范围内的话，还是以大量运动为优。我我在八中高考的那一年，天气很热，人们学习很焦虑，时间排得很满，我仍能在那反正学习中在某一个课间里抽出不到十分钟的时间去操场上跑三圈，这仅仅就是一公里左右的距离和正常的训练和锻炼相比，当然是微不足道的，但是这短暂的跑步，却能给接下来的晚自习打打好，非常充足的精力，这边是运动的魅力所在，而在有一定运动量的条件下，比如当下较大量的运动，能够更好的发挥运动的效能，从从更低的一个角度，在家里的运动量是肯定小于在学校的，因此，从能量守恒的角度，再加了运动量，理应要高于在校的运动量，才能达到一个教育健康的标准。由于实际条件的限制，我们很难做到这一点，因此，在力所能及的范围内，我们要更大量的运动。</p><p>刚刚也说到过，加入新鲜的刺激，能够减缓对运动这一负面事物的抵制，因此，为了更高效，更持久的进行某一个强度不低的运动，采用这种面向新事物的操作效果是非凡的。在我的家乡有这么美，这么多美好的事物，美丽的街景，在过去很可能难以欣赏他们的美貌，那么，在当下有限的时间，我们自然可以将自己的视线投入到他们，运动是一门体育，更是一门科学，通过对这些事物的反思，能够让我们更好的达到某个效果，同样是通过这些反思，能让我们更好的确认接下来的方向。</p><p><img src="/img/2.jpg" alt="展示一下今天跑步的成果"></p>]]></content>
      
      
      <categories>
          
          <category> thoughts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2023/08/04/test/"/>
      <url>/2023/08/04/test/</url>
      
        <content type="html"><![CDATA[<p>由积分中值定理,有\int_{a}^{b} f(x) dx&#x3D;f(\xi )(b-a),其中a&lt; \xi &lt;b</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>大蟑螂</title>
      <link href="/2023/08/03/%E5%A4%A7%E8%9F%91%E8%9E%82/"/>
      <url>/2023/08/03/%E5%A4%A7%E8%9F%91%E8%9E%82/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="519fb7d5b69639dc91dadc1cff2c558c207ce6565369e1a041c5e69c9d46537f">85d8d6888b11329ca36fcebb78b677160e776e23cdeb397cfb30ded92dff9f8d0e0b9a4711104881445fbb1255129b1a03487900383fb332d3f53615f46d2fcef5e88b2f4e69711b52ff7fce08555df538cecfc736980af72f7179e7a558eeddcbde11a0dcce13a8399ea7aa9aec0548b4c9c8d996eb426d143d5071dc7d620369786a02afa0ecab7ca5eb7b75e549d5a0faa9c6000fc0baac5d53d9a366095887c0664a49f5ba688bb106692d41ad7bfb2921f7a280b321c4cb57e68afdbfb204434b15ed47c3122696dabc4df4ec9cc568419cbb331d7feb896f9cfec3484c3a81f83294bfb59f2bb9ccb40839e2d1692ccb4565123a5b4226348d6d0d4070eb3fb775c2bafc0ac593e2b0ff9e5929c6be3efe1f87eb0ff30b86401b7d4f93517d291cb48df3aa327ef64ba2f280c442780c6a2060a73cd8ccd04723425afb9af9283e57f4181145239eaab86c1ce0c7a22ff5b0d8064e660290ae0d45ec061f5d8e454c8bb79e626f9e27ac7d8ae4701b73d9f33105281c4dccb58c655076d44db40af332aa962b146cdf6b352054a2421140dc30ef329bb632b808155d95f34b2c6457eb80f5a673d7d7f41826cb011ca289e4ebbc7c7e8e504c730d3ef9c652d4873f482b263877e03920319abd052e8d671050938ed3905c423a1072da0d5fd289a51b8cd25f57d550934b1662729c8bcd53a43c8cd02513855d13803a0c2f78d6f7670e86a7c8669ce5596bddbdb8618cfee624c1da82c71b3c21405a2ed48b8ffacc2cbf4ef32c6802910c5cc13749d3534d4b66d6b1a487828aa6048b74ffb47242b58a4e93ce0807a1a5f0e96cd2ef70d853cdd89af7c01386572d899ff603ee1392fb36b9d4e3e6eafd9cbb4bd268bde15ee8f680550d2670fa9db9ed64c5a5d563b396aeaedd8562dbba82a2c36412b58f9c4a0df109d223272580ed2a308a4f62ff7d19af01c5e3b01babb3a753d76a2e0ba3c10924f3f60e6963b0c148dbada142f5a3c7484435809e6f43c226d185db8ddbda235bacb170349026aa6640cd87feca2440099cb6c4dea96e2ab60211384edff0b1841938ddaec3a056c595c5d693bd3a1403244d8e0abaaf749f6a1268844e029a3b4a17cf48155a213eb83cc19ec4e9630a36e11dc011f03293a91deac49ca4a7a0efefdfffa7489b242a0571268e35ed73b3e4f52b51f271ae68e850f0cb5bfc16384d6ea38f2f095628d9725d5c6d1adae372a2a81d3e0d47b82ce7463a14ecdaa81352458bca893ce2b1b176bbfb1c8efe8e98c3c0b3cf7ff6bb79e6039e83faf15119b48b1310d3113c5483c48413da0de946d8dd8a04161dcbf7e8eecbc4e6fc8edba1cc78e77b531ca6ffa209b22a433bcd6952693cf92bda5125479c014b739c7bc285b19268c98a042c5a0e672fd7da5e0c85346bb0305919d1189183cfbff5de1dc240f92c3922fb59cb4d1f55e02c9fd555523ffa3ed8766b61eb597a7a29a29491bbe1604bed1e03ff35ece72f20feb48aeda208b26fba58f8da1b1c740fdeb886845c3cf26015cd2ffc53da1e7fe2f3e7545c5672245f5939c962f43d47251ad0bdbe2c80e6fc28dd50b0df262cbad984cf9211fdbe1f9d72309ecd3c09152c1e6750560c46b7eef95b878eab41887fcc5b50c5509ba6adbf58fff1446bcb2b92b7c3dfdfa6a61043a101dfb0e9bd8e3f61ebb9e7c34c4b5865afe47fa7aaca00aa108f552d83321fa086972df2e5e2eea0cbf696e05ed587744c0d133ede4ee5508cfcee8dfdb1c1a7a839b252cf4b9ea5d482bb1c15a2892ce65f5c7671c502f925f2cdea04056914f8865ff95e1d4de3b50d0ca0a752397d9d5ac2695479b32acbdf8b119b711d6932413af518cec441e1626dbed0e535048e8f4715852005566e72004a42915ae6bcf43ab1c985812f92d85c21002e476b7c58825ebbdd9f9fd38fb5f7ee8b3f15226af29ae39cc3575ec8dcd3dba85fec51191f8e93b8b8038f2234ae685838c08f53ed6b3a39092675847b2ad359ee38ac2f4898f938b5f2593551e4a6c83fb2b213444677cb90bf9f8d6297e3bbb12b270a4a546b90bda51df4e529ed5ccd90759958079a380fbab565d8e7f39a67dd4e1264c2dfdd0fb7627f671d6d3a5b9b36586cef77c9310bba42fbd91f10f2016dbad69587d9f6ee04d682895ad9539f4cc1d9e2d2d13923ffeea946095964519e3fd729e28dfa1bb1bf8857ae5e616aa44ac375a80781f19e9e53544e4e3c252caa52b480955c606962895bb63b6cb9a13dfc21c30d1d8ecec224263c9fbb5c669707afc8882e7422cc4d61b9a0d3beeed529be0218e2b4d015b1b05c33a0da799a02781e23b5f206eefd0cdb83fea81b814342d348eb01662d274f8dde49747a03345048f4fed36011cf4a9e57e5b94ad7054ad9bd6c5a4b9a7e9d4cbcfdc7309f44e9012c423eb61653744ad819c21967e04f2bab3d1a64e2fd3e9c548429c5f0e302eef150a05ba1fce38dfa2b68f23bcd011efe2bb7dd5ccb55d39a1edb7792e1d1c4395fd22288da8a461f13fbe8c1d3a55e71c9d6d6cbe9cb8a2f942968a214c438856b0e14b25658174dcc88177df85cda62ba5ebe311fbf6870c5519bd90a52938c299d8b3f60823111dae0ec70278e1ca4354764bfdcce5ab27589a057417eca73a24d3e0bef54a33ecc1290bc92ed957dbd4665c26cdccf4a1912c27aa0cc9895ffc9f9370e8203485d032ad57aaa445765a9bfb69103e263e30cacc41d6dc9cd8bfbf2471993ed4c4b696bcce30c08a17e0533b0ba5d18b88e3fa467ea6881c262b6eeb96a0e195ee67137cf205f54d6a929e7e880ef71b0fd6a9ce14c4f835b0a688ed93d770a7fedc8c20e971ffc205525c4222dce930184f0264ead81ef92037e827c2f865c00f64d116c14f6ccd4609507cad1a78becdd9f368ed25eafbd65b12014f507fa9421b1ee718724e75ab12715fb2aa3f454046203b5b594b66c3ab18bbe23870b4f992bfe3db317b1936e52f96fe5d8c75d7edd976e9a6e037884752fe1c21dfb8c492103a90b0b3615404701c874c1a8ad941c72f0cfa3eecbc7605a8974bc1c432be411f0a24a9761c90976b2d7a182cf1a87158c1dd162ef385770a939fed39a81c7a744229bd554552c9ef6cf9fa9e1e15554969b9982af5d9229e09987de5db6e54563e019ecbb0850b5795de360f82ae0c26661fb384abbaf8230f127ab0a0ac32eabc1ba540e5736bcb1bee7317f728103c4971dda0329cd502d36315f6ee606ddd96ba5186e0fd22f731722b527e43202ecc6216ebea0ccd2e33a779bcc07d44a900f3bcb926c5e6c6a698b0ca1aa5cb27c7e076a0e52bc244fa4334f2520a2b09344730a5cebc8f90ffdee4cbc01c87b707b73a16f7e0a6a67d728d0d3734ff72f6d252a0b7d8b61055cd52b4931937247289005cd65a4f94e47a93fdb861a50364141477376cbfb9ee859b9207c998a3f22a68591257d0feb0133ee39b88cdd7b8b83ef2e395ae9d1d7afbb01a890d38c33e051478745dceb731a7c08d0b002b8e5076d5db110f917907fdd0cc7ecd0f17fba748e10cef11cffc32819a6b34f7e4a16d0988a17d322cbf52f833baff27f33af73ee15b2f84474add83927299808db889ee28ce731f5572b47b8469cef0eed1ef9152be9a07267d61219e850e1309f992b08a45160ea53838b9dc4922311c528f7a02d2b6d81315ab1fdf6eee79d79e052ed77061a032435f793b4f67d44101e6544</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> thoughts </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 广州随笔 </tag>
            
            <tag> 游记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用总结</title>
      <link href="/2023/08/02/hexo%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/"/>
      <url>/2023/08/02/hexo%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<blockquote><p>第一次写markdown，熟练度有待提升</p></blockquote><h1 id="hexo使用总结"><a href="#hexo使用总结" class="headerlink" title="hexo使用总结"></a>hexo使用总结</h1><h2 id="1学习安装node-js-npm和git"><a href="#1学习安装node-js-npm和git" class="headerlink" title="1学习安装node.js,npm和git"></a>1学习安装node.js,npm和git</h2><p>通过学习这些软件的安装和环境配置，再次感到了计算机那独特的特点，也逐渐找请这瞎搞中的流程。在warning和error中找到解决问题的方法。</p><h2 id="2学习hexo建站，美化与deploy"><a href="#2学习hexo建站，美化与deploy" class="headerlink" title="2学习hexo建站，美化与deploy"></a>2学习hexo建站，美化与deploy</h2><p>通过各种网站的教程大致美化了下自己网站，平常写文章发布啥的大多还是用下面几个命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo -v</span></span><br><span class="line"><span class="attribute">hexo clean</span></span><br><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure><p>目前网站足够使用，希望对排版和布局在日后优化。</p><p><em>一个值得注意的缺点是，网页封面和头像图片加载速度太慢（如图），需尽快找到应对方法。</em><br><img src="/img/1.png" alt="卡住的图片"></p><h2 id="3学习markdown"><a href="#3学习markdown" class="headerlink" title="3学习markdown"></a>3学习markdown</h2><p>用的还很不熟，希望尽快适应<br>同时想插入latex，以便更好地记录数学公式</p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown教程</title>
      <link href="/2023/08/02/markdown%E6%95%99%E7%A8%8B/"/>
      <url>/2023/08/02/markdown%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>微信公众号排版工具。问题或建议，请公众号留言。**<a href="#jump_8">程序员翻身</a>**</p></blockquote><p>建议使用 <strong>Chrome</strong> 浏览器，体验最佳效果。</p><p>使用微信公众号编辑器有一个十分头疼的问题：粘贴出来的代码，格式错乱，空间小还带行号，而且特别丑。Markdown.com.cn编辑器能够解决这个问题。</p><p>Markdown是一种轻量级的「标记语言」。</p><p>请阅读下方文本熟悉工具使用方法，本文可直接拷贝到微信中预览。</p><h2 id="1-Markdown-com-cn-简介"><a href="#1-Markdown-com-cn-简介" class="headerlink" title="1 Markdown.com.cn 简介"></a>1 Markdown.com.cn 简介</h2><ul><li>支持自定义样式的 Markdown 编辑器</li><li>支持微信公众号、知乎和稀土掘金</li><li>点击右上方对应图标，一键复制到各平台</li></ul><h2 id="2-Markdown语法教程"><a href="#2-Markdown语法教程" class="headerlink" title="2 Markdown语法教程"></a>2 Markdown语法教程</h2><h3 id="2-1-标题"><a href="#2-1-标题" class="headerlink" title="2.1 标题"></a>2.1 标题</h3><p>不同数量的<code>#</code>可以完成不同的标题，如下：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h3 id="2-2-字体"><a href="#2-2-字体" class="headerlink" title="2.2 字体"></a>2.2 字体</h3><p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p><p><strong>这个是粗体</strong></p><p><em>这个是斜体</em></p><p><em><strong>这个是粗体加斜体</strong></em></p><p>~这里想用删除线~~</p><p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p><h3 id="2-3-无序列表"><a href="#2-3-无序列表" class="headerlink" title="2.3 无序列表"></a>2.3 无序列表</h3><p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p><ul><li>无序列表 1</li><li>无序列表 2</li><li>无序列表 3</li></ul><p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p><ul><li>无序列表 1</li><li>无序列表 2<ul><li>无序列表 2.1</li><li>无序列表 2.2</li></ul></li></ul><p><strong>由于微信原因，最多支持到二级列表</strong>。</p><h3 id="2-4-有序列表"><a href="#2-4-有序列表" class="headerlink" title="2.4 有序列表"></a>2.4 有序列表</h3><p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p><ol><li>有序列表 1</li><li>有序列表 2</li><li>有序列表 3</li></ol><h3 id="2-5-引用"><a href="#2-5-引用" class="headerlink" title="2.5 引用"></a>2.5 引用</h3><p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p><blockquote><p>读一本好书，就是在和高尚的人谈话。 ——歌德</p></blockquote><blockquote><p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p></blockquote><h3 id="2-7-链接"><a href="#2-7-链接" class="headerlink" title="2.7 链接"></a>2.7 链接</h3><p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p><p>对于该论述，欢迎读者查阅之前发过的文章，<a href="https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA">你是《未来世界的幸存者》么？</a><br><a id="jump_8"></a></p><h3 id="2-8-图片"><a href="#2-8-图片" class="headerlink" title="2.8 图片"></a>2.8 图片</h3><p>插入图片，格式如下：</p><p><img src="https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg" alt="这里写图片描述"></p><p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p><p><img src="https://markdown.com.cn/images/i-am-svg.svg"></p><p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p><p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p><h3 id="2-9-分割线"><a href="#2-9-分割线" class="headerlink" title="2.9 分割线"></a>2.9 分割线</h3><p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p><hr><h3 id="2-10-表格"><a href="#2-10-表格" class="headerlink" title="2.10 表格"></a>2.10 表格</h3><p>可以使用冒号来定义表格的对齐方式，如下：</p><table><thead><tr><th align="left">姓名</th><th align="center">年龄</th><th align="right">工作</th></tr></thead><tbody><tr><td align="left">小可爱</td><td align="center">18</td><td align="right">吃可爱多</td></tr><tr><td align="left">小小勇敢</td><td align="center">20</td><td align="right">爬棵勇敢树</td></tr><tr><td align="left">小小小机智</td><td align="center">22</td><td align="right">看一本机智书</td></tr></tbody></table><h2 id="3-特殊语法"><a href="#3-特殊语法" class="headerlink" title="3. 特殊语法"></a>3. 特殊语法</h2><h3 id="3-1-脚注"><a href="#3-1-脚注" class="headerlink" title="3.1 脚注"></a>3.1 脚注</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>脚注与链接的区别如下所示：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">链接：[<span class="string">文字</span>](<span class="link">链接</span>)</span><br><span class="line">脚注：[<span class="string">文字</span>](<span class="link">脚注解释 &quot;脚注名字&quot;</span>)</span><br></pre></td></tr></table></figure><p>有人认为在<a href="https://en.wikipedia.org/wiki/Front-end_web_development" title="Front-end web development">大前端时代</a>的背景下，移动端开发（Android、IOS）将逐步退出历史舞台。</p><p><a href="%E6%98%AF%E6%8C%87%E6%8E%8C%E6%8F%A1%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%EF%BC%8C%E5%B9%B6%E8%83%BD%E5%88%A9%E7%94%A8%E5%A4%9A%E7%A7%8D%E6%8A%80%E8%83%BD%E7%8B%AC%E7%AB%8B%E5%AE%8C%E6%88%90%E4%BA%A7%E5%93%81%E7%9A%84%E4%BA%BA%E3%80%82" title="什么是全栈工程师">全栈工程师</a>在业务开发流程中起到了至关重要的作用。</p><p>脚注内容请拉到最下面观看。</p><h3 id="3-2-代码块"><a href="#3-2-代码块" class="headerlink" title="3.2 代码块"></a>3.2 代码块</h3><blockquote><p>支持平台：微信代码主题仅支持微信公众号！其他主题无限制。</p></blockquote><p>如果在一个行内需要引用代码，只要用反引号引起来就好，如下：</p><p>Use the <code>printf()</code> function.</p><p>在需要高亮的代码块的前一行及后一行使用三个反引号，同时<strong>第一行反引号后面表示代码块所使用的语言</strong>，如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// FileName: HelloWorld.java</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">  <span class="comment">// Java 入口程序，程序从此入口</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;Hello,World!&quot;</span>); <span class="comment">// 向控制台打印一条语句</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>支持以下语言种类：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">clojure，cpp，<span class="keyword">cs</span>，css</span><br><span class="line">dart，dockerfile, diff</span><br><span class="line">erlang</span><br><span class="line"><span class="keyword">go</span>，gradle，groovy</span><br><span class="line">haskell</span><br><span class="line">java，javascript，json，julia</span><br><span class="line">kotlin</span><br><span class="line">lisp，<span class="keyword">lua</span></span><br><span class="line">makefile，markdown，matlab</span><br><span class="line">objectivec</span><br><span class="line"><span class="keyword">perl</span>，php，<span class="keyword">python</span></span><br><span class="line">r，<span class="keyword">ruby</span>，rust</span><br><span class="line">scala，<span class="keyword">shell</span>，sql，swift</span><br><span class="line">tex，typescript</span><br><span class="line">verilog，vhdl</span><br><span class="line">xml</span><br><span class="line">yaml</span><br></pre></td></tr></table></figure><p>如果想要更换代码高亮样式，可在上方<strong>代码主题</strong>中挑选。</p><p>其中<strong>微信代码主题与微信官方一致</strong>，有以下注意事项：</p><ul><li>带行号且不换行，代码大小与官方一致</li><li>需要在代码块处标志语言，否则无法高亮</li><li>粘贴到公众号后，用鼠标点代码块内外一次，完成高亮</li></ul><p>diff 不能同时和其他语言的高亮同时显示，且需要调整代码主题为微信代码主题以外的代码主题才能看到 diff 效果，使用效果如下:</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="addition">+ 新增项</span></span><br><span class="line"><span class="deletion">- 删除项</span></span><br></pre></td></tr></table></figure><p><strong>其他主题不带行号，可自定义是否换行，代码大小与当前编辑器一致</strong></p><h3 id="3-3-数学公式"><a href="#3-3-数学公式" class="headerlink" title="3.3 数学公式"></a>3.3 数学公式</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>行内公式使用方法，比如这个化学公式：$\ce{Hg^2+ -&gt;[I-] HgI2 -&gt;[I-] [Hg^{II}I4]^2-}$</p><p>块公式使用方法如下：</p><p>$$H(D_2) &#x3D; -\left(\frac{2}{4}\log_2 \frac{2}{4} + \frac{2}{4}\log_2 \frac{2}{4}\right) &#x3D; 1$$</p><p>矩阵：</p><p>$$<br>  \begin{pmatrix}<br>  1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>  1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>  \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>  1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>  \end{pmatrix}<br>$$</p><p>公式由于微信不支持，目前的解决方案是转成 svg 放到微信中，无需调整，矢量不失真。</p><p>目前测试如果公式量过大，在 Chrome 下会存在粘贴后无响应，但是在 Firefox 中始终能够成功。</p><h3 id="3-4-TOC"><a href="#3-4-TOC" class="headerlink" title="3.4 TOC"></a>3.4 TOC</h3><blockquote><p>支持平台：微信公众号、知乎。</p></blockquote><p>TOC 全称为 Table of Content，列出全部标题。</p><p>[TOC]</p><p>由于微信只支持到二级列表，本工具仅支持二级标题和三级标题的显示。</p><h3 id="3-5-注音符号"><a href="#3-5-注音符号" class="headerlink" title="3.5 注音符号"></a>3.5 注音符号</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>支持注音符号，用法如下：</p><p>Markdown Nice 这么好用，简直是{喜大普奔|hē hē hē hē}呀！</p><h3 id="3-6-横屏滑动幻灯片"><a href="#3-6-横屏滑动幻灯片" class="headerlink" title="3.6 横屏滑动幻灯片"></a>3.6 横屏滑动幻灯片</h3><blockquote><p>支持平台：微信公众号。</p></blockquote><p>通过<code>&lt;![](url),![](url)&gt;</code>这种语法设置横屏滑动滑动片，具体用法如下：</p><p>&lt;<img src="https://markdown.com.cn/images/blue.jpg" alt="蓝1">,<img src="https://markdown.com.cn/images/green.jpg" alt="绿2">,<img src="https://markdown.com.cn.jpg/" alt="红3">&gt;</p><h2 id="4-其他语法"><a href="#4-其他语法" class="headerlink" title="4 其他语法"></a>4 其他语法</h2><h3 id="4-1-HTML"><a href="#4-1-HTML" class="headerlink" title="4.1 HTML"></a>4.1 HTML</h3><p>支持原生 HTML 语法，请写内联样式，如下：</p><p><span style="display:block;text-align:right;color:orangered;">橙色居右</span><br><span style="display:block;text-align:center;color:orangered;">橙色居中</span></p><h3 id="4-2-UML"><a href="#4-2-UML" class="headerlink" title="4.2 UML"></a>4.2 UML</h3><p>不支持，推荐使用开源工具<code>https://draw.io/</code>制作后再导入图片</p><h2 id="5-致谢"><a href="#5-致谢" class="headerlink" title="5 致谢"></a>5 致谢</h2><ul><li>歌词经理 <a href="https://github.com/lyricat/wechat-format" title="灵感来源">wechat-fromat</a></li><li>颜家大少 <a href="http://md.aclickall.com/" title="MdA2All">MD2All</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/08/01/hello-world/"/>
      <url>/2023/08/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
